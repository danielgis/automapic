<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbx_search.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TcInPvG/iE9HZOrjtXEAAAAASUVORK5CYII=
</value>
  </data>
</root>